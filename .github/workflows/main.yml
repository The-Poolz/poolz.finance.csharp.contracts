name: Generate Contract C# Code

on:
  issues:
    types: [opened, edited]

jobs:
  generate-code:
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, 'make ')

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install NethereumGenerator.ExtendedConsole
        run: dotnet tool install --global NethereumGenerator.ExtendedConsole --version 1.0.2

      - name: Parse issue for contract details and set environment variables
        run: |
          CONTRACT_DETAILS=$(echo ${{ github.event.issue.title }} | cut -d ' ' -f 2)
          echo "CONTRACT_NAME=$(echo $CONTRACT_DETAILS | cut -d '@' -f 1)" >> $GITHUB_ENV
          echo "CONTRACT_VERSION=$(echo $CONTRACT_DETAILS | cut -d '@' -f 2)" >> $GITHUB_ENV
          
      - name: Fetch ABI and ByteCode from GraphQL API and save
        shell: bash
        run: |
          GRAPHQL_URL="https://poolzfinancedata.com/graphql"   # при необходимости поменяй
          NAME_VERSION="${CONTRACT_NAME}@${CONTRACT_VERSION}"

          read -r -d '' GQL_BODY <<EOF
          {
            "query": "query Contracts(\$nv: String!) { contracts(filters: { NameVersion: { eq: \$nv } }) { ABI ByteCode { bytecode } } }",
            "variables": { "nv": "${NAME_VERSION}" }
          }
          EOF

          RESP=$(curl -s -X POST -H "Content-Type: application/json" \
                     --data "${GQL_BODY}" "${GRAPHQL_URL}")

          [[ $(echo "$RESP" | jq '.data.contracts | length') -eq 0 ]] && {
              echo "❌ Contract ${NAME_VERSION} not found"; exit 1; }

          ABI=$(echo "$RESP" | jq -c '.data.contracts[0].ABI')
          BYTECODE=$(echo "$RESP" | jq -r '.data.contracts[0].ByteCode.bytecode')

          mkdir -p "${{ github.workspace }}/ABIs" "${{ github.workspace }}/ByteCode"
          echo "${ABI}"          > "${{ github.workspace }}/ABIs/${CONTRACT_NAME}.abi"
          echo -n "${BYTECODE}"  > "${{ github.workspace }}/ByteCode/${CONTRACT_NAME}.bin"

      - name: Add NethereumGenerator.ExtendedConsole to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Run Nethereum.Generator.Console
        run: NethereumGenerator.ExtendedConsole generate from-abi -cn ${CONTRACT_NAME} -abi ${{ github.workspace }}/ABIs/${CONTRACT_NAME}.abi -bin ${{ github.workspace }}/ByteCode/${CONTRACT_NAME}.bin -o ${{ github.workspace }} -ns poolz.finance.csharp.contracts
        shell: bash

      - name: Create new branch
        run: |
          BRANCH_NAME="added-${CONTRACT_NAME}"
          git checkout -b $BRANCH_NAME

      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add .
          git commit -m "Added generated code for ${CONTRACT_NAME}"
          git push origin "added-${CONTRACT_NAME}"

      - name: Create Pull Request
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          PR_URL=$(gh pr create --title "Add generated code for ${{ env.CONTRACT_NAME }}" --body "This PR adds generated code for contract ${{ env.CONTRACT_NAME }}. Closes #${ISSUE_NUMBER}" --base master --head "added-${{ env.CONTRACT_NAME }}")
          PR_NUMBER=$(echo $PR_URL | grep -oP '\d+$')
          echo "PR_NUMBER=${PR_NUMBER}" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge Pull Request
        uses: juliangruber/merge-pull-request-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ env.PR_NUMBER }}
          method: squash

      - name: Close Issue
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          gh issue close $ISSUE_NUMBER --comment "The changes have been merged and the issue is now closed."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
